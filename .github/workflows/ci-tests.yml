name: ci-tests

# Trigger the workflow on push or pull request,
# but only for the main branch
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ["3.12"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install --user pipx
        python -m pipx ensurepath
        pipx install poetry
        poetry install
    - name: Testing
      run: |
        poetry run python -m pytest tests

  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install --user pipx
        python -m pipx ensurepath
        pipx install poetry
        poetry install
    - name: Testing
      run: |
        poetry run python -m pytest tests

  build-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: ["3.12"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install --user pipx
        python -m pipx ensurepath
        pipx install poetry
        poetry install
    - name: Testing
      run: |
        poetry run python -m pytest tests
